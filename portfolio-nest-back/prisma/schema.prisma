generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Contact {
  contact_id    Int      @id @default(autoincrement())
  contact_name  String   @db.VarChar(30)
  contact_email String   @db.VarChar(50)
  contact_phone String   @db.VarChar(14)
  message       String   @db.VarChar(5000)
  date          DateTime
}

model Project {
  project_id          Int                 @id @default(autoincrement())
  project_date_begin  DateTime
  project_date_end    DateTime?
  project_name        String              @db.VarChar(255)
  project_description String?             @db.VarChar(1000)
  project_url         String?             @db.VarChar(255)
  project_github      String?             @db.VarChar(255)
  project_image_path  String?             @db.VarChar(100)
  status_id           Int
  project_status      ProjectStatus       @relation(fields: [status_id], references: [id])
  ProjectTechnology   ProjectTechnology[]
}

model ProjectTechnology {
  id            Int        @id @default(autoincrement())
  project       Project    @relation(fields: [project_id], references: [project_id])
  project_id    Int
  technology    Technology @relation(fields: [technology_id], references: [technology_id])
  technology_id Int
}

model Technology {
  technology_id     Int                 @id @default(autoincrement())
  technology_name   String              @db.VarChar(255)
  ProjectTechnology ProjectTechnology[]
}

model Category {
  id            Int                 @id @default(autoincrement())
  category_name String              @db.VarChar(255)
  article       ArticleCategories[]
}

model ArticleCategories {
  article     Articles @relation(fields: [article_id], references: [id])
  article_id  Int
  category    Category @relation(fields: [category_id], references: [id])
  category_id Int

  @@id([category_id, article_id])
}

model ProjectStatus {
  id          Int       @id @default(autoincrement())
  status_name String    @db.VarChar(255)
  Project     Project[]
}

model ArticlesStatus {
  id          Int        @id @default(autoincrement())
  status_name String     @db.VarChar(255)
  article     Articles[]
}

model Comments {
  comment_id      Int      @id @default(autoincrement())
  comment_content String   @db.VarChar(5000)
  article_id      Int
  article         Articles @relation(fields: [article_id], references: [id])
}

model Likes {
  like_id    Int      @id @default(autoincrement())
  article_id Int
  article    Articles @relation(fields: [article_id], references: [id])
}

model User {
  user_id  Int    @id @default(autoincrement())
  password String @db.VarChar(255)
  username String @db.VarChar(255)
}

model Articles {
  id                 Int                 @id @default(autoincrement())
  link               String?             @db.VarChar(500)
  title              String              @db.VarChar(255)
  content            String?             @db.VarChar(10000)
  likes              Likes[]
  created_at         DateTime            @default(now())
  article_categories ArticleCategories[]
  status_id          Int
  article_status     ArticlesStatus      @relation(fields: [status_id], references: [id])
  Comment            Comments[]
}
